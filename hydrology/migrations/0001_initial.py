# Generated by Django 2.1.4 on 2019-02-25 10:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AirTemperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_datetime', models.DateTimeField()),
                ('entry_datetime', models.DateTimeField()),
                ('air_temperature', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'air_temperature',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_datetime', models.DateTimeField()),
                ('entry_datetime', models.DateTimeField()),
                ('comment', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'comment',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Discharge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_datetime', models.DateTimeField()),
                ('entry_datetime', models.DateTimeField()),
                ('discharge', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'discharge',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Hydrologist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'hydrologists',
            },
        ),
        migrations.CreateModel(
            name='Hydropost',
            fields=[
                ('code', models.IntegerField(primary_key=True, serialize=False)),
                ('nameEn', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('lat', models.DecimalField(decimal_places=2, max_digits=5)),
                ('lon', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                'db_table': 'hydroposts',
            },
        ),
        migrations.CreateModel(
            name='HydropostCategory',
            fields=[
                ('code', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'hydropost_categories',
            },
        ),
        migrations.CreateModel(
            name='IceThickness',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_datetime', models.DateTimeField()),
                ('entry_datetime', models.DateTimeField()),
                ('ice_thickness', models.IntegerField()),
            ],
            options={
                'db_table': 'ice_thickness',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_datetime', models.DateTimeField()),
                ('entry_datetime', models.DateTimeField()),
                ('level', models.DecimalField(decimal_places=2, max_digits=5)),
                ('pile', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'level',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hydrologist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrology.Hydrologist')),
                ('hydropost', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hydrology.Hydropost')),
            ],
            options={
                'db_table': 'observations',
            },
        ),
        migrations.CreateModel(
            name='Precipitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_datetime', models.DateTimeField()),
                ('entry_datetime', models.DateTimeField()),
                ('precipitation', models.DecimalField(decimal_places=2, max_digits=5)),
                ('precipitation_type', models.CharField(choices=[('жидкие', 'Жидкие осадки'), ('твердые', 'Твердые осадки'), ('смешанные', 'Смешанные осадки')], max_length=31)),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hydrology.Observation')),
            ],
            options={
                'db_table': 'precipitation',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('code', models.CharField(max_length=31, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'regions',
            },
        ),
        migrations.CreateModel(
            name='Ripple',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_datetime', models.DateTimeField()),
                ('entry_datetime', models.DateTimeField()),
                ('ripple', models.IntegerField()),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hydrology.Observation')),
            ],
            options={
                'db_table': 'ripple',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WaterTemperature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_datetime', models.DateTimeField()),
                ('entry_datetime', models.DateTimeField()),
                ('water_temperature', models.DecimalField(decimal_places=2, max_digits=5)),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hydrology.Observation')),
            ],
            options={
                'db_table': 'water_temperature',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_datetime', models.DateTimeField()),
                ('entry_datetime', models.DateTimeField()),
                ('wind_direction', models.CharField(choices=[('штиль', 'штиль'), ('по течению', 'по течению'), ('против течения', 'против течения'), ('с левого берега', 'с левого берега'), ('с правого берега', 'с правого берега')], max_length=17)),
                ('wind_power', models.CharField(choices=[('штиль', 'штиль'), ('слабый', 'слабый'), ('умеренный', 'умеренный'), ('сильный', 'сильный')], max_length=10)),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hydrology.Observation')),
            ],
            options={
                'db_table': 'wind',
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='level',
            name='observation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hydrology.Observation'),
        ),
        migrations.AddField(
            model_name='icethickness',
            name='observation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hydrology.Observation'),
        ),
        migrations.AddField(
            model_name='hydropost',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hydrology.HydropostCategory'),
        ),
        migrations.AddField(
            model_name='hydropost',
            name='hydrologists',
            field=models.ManyToManyField(through='hydrology.Observation', to='hydrology.Hydrologist'),
        ),
        migrations.AddField(
            model_name='hydropost',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hydrology.Region'),
        ),
        migrations.AddField(
            model_name='discharge',
            name='observation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hydrology.Observation'),
        ),
        migrations.AddField(
            model_name='comment',
            name='observation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hydrology.Observation'),
        ),
        migrations.AddField(
            model_name='airtemperature',
            name='observation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='hydrology.Observation'),
        ),
        migrations.AlterUniqueTogether(
            name='wind',
            unique_together={('observation', 'observation_datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='watertemperature',
            unique_together={('observation', 'observation_datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='ripple',
            unique_together={('observation', 'observation_datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='precipitation',
            unique_together={('observation', 'observation_datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='level',
            unique_together={('observation', 'observation_datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='icethickness',
            unique_together={('observation', 'observation_datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='discharge',
            unique_together={('observation', 'observation_datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='comment',
            unique_together={('observation', 'observation_datetime')},
        ),
        migrations.AlterUniqueTogether(
            name='airtemperature',
            unique_together={('observation', 'observation_datetime')},
        ),
    ]
